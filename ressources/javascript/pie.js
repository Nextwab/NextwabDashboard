!function(a, b, c, d){var e = a.fn.peity = function(b, c){return i && this.each(function(){var d = a(this), g = d.data("_peity"); g?(b && (g.type = b), a.extend(g.opts, c)):(g = new f(d, b, a.extend({}, e.defaults[b], d.data("peity"), c)), d.change(function(){g.draw()}).data("_peity", g)), g.draw()}), this}, f = function(a, b, c){this.$el = a, this.type = b, this.opts = c}, g = f.prototype, h = g.svgElement = function(c, d){return a(b.createElementNS("http://www.w3.org/2000/svg", c)).attr(d)}, i = "createElementNS"in b && h("svg", {})[0].createSVGRect; g.draw = function(){var a = this.opts; e.graphers[this.type].call(this, a), a.after && a.after.call(this, a)}, g.fill = function(){var b = this.opts.fill; return a.isFunction(b)?b:function(a, c){return b[c % b.length]}}, g.prepare = function(a, b){return this.$svg || this.$el.hide().after(this.$svg = h("svg", {"class":"peity"})), this.$svg.empty().data("peity", this).attr({height:b, width:a})}, g.values = function(){return a.map(this.$el.text().split(this.opts.delimiter), function(a){return parseFloat(a)})}, e.defaults = {}, e.graphers = {}, e.register = function(a, b, c){this.defaults[a] = b, this.graphers[a] = c}, e.register("pie", {fill:["#ff9900", "#fff4dd", "#ffc66e"], radius:8}, function(b){if (!b.delimiter){var d = this.$el.text().match(/[^0-9\.]/); b.delimiter = d?d[0]:","}var e = a.map(this.values(), function(a){return a > 0?a:0}); if ("/" == b.delimiter){var f = e[0], g = e[1]; e = [f, c.max(0, g - f)]}for (var i = 0, j = e.length, k = 0; i < j; i++)k += e[i]; k || (j = 2, k = 1, e = [0, 1]); var l = 2 * b.radius, m = this.prepare(b.width || l, b.height || l), n = m.width(), o = m.height(), p = n / 2, q = o / 2, r = c.min(p, q), s = b.innerRadius; "donut" != this.type || s || (s = .5 * r); var t = c.PI, u = this.fill(), v = this.scale = function(a, b){var d = a / k * t * 2 - t / 2; return[b * c.cos(d) + p, b * c.sin(d) + q]}, w = 0; for (i = 0; i < j; i++){var z, x = e[i], y = x / k; if (0 != y){if (1 == y)if (s){var A = p - .01, B = q - r, C = q - s; z = h("path", {d:["M", p, B, "A", r, r, 0, 1, 1, A, B, "L", A, C, "A", s, s, 0, 1, 0, p, C].join(" ")})} else z = h("circle", {cx:p, cy:q, r:r}); else{var D = w + x, E = ["M"].concat(v(w, r), "A", r, r, 0, y > .5?1:0, 1, v(D, r), "L"); s?E = E.concat(v(D, s), "A", s, s, 0, y > .5?1:0, 0, v(w, s)):E.push(p, q), w += x, z = h("path", {d:E.join(" ")})}z.attr("fill", u.call(this, x, i, e)), m.append(z)}}}), e.register("donut", a.extend(!0, {}, e.defaults.pie), function(a){e.graphers.pie.call(this, a)}), e.register("line", {delimiter:",", fill:"#c6d9fd", height:16, min:0, stroke:"#4d89f9", strokeWidth:1, width:32}, function(a){var b = this.values(); 1 == b.length && b.push(b[0]); for (var e = c.max.apply(c, a.max == d?b:b.concat(a.max)), f = c.min.apply(c, a.min == d?b:b.concat(a.min)), g = this.prepare(a.width, a.height), i = a.strokeWidth, j = g.width(), k = g.height() - i, l = e - f, m = this.x = function(a){return a * (j / (b.length - 1))}, n = this.y = function(a){var b = k; return l && (b -= (a - f) / l * k), b + i / 2}, o = n(c.max(f, 0)), p = [0, o], q = 0; q < b.length; q++)p.push(m(q), n(b[q])); p.push(j, o), a.fill && g.append(h("polygon", {fill:a.fill, points:p.join(" ")})), i && g.append(h("polyline", {fill:"none", points:p.slice(2, p.length - 2).join(" "), stroke:a.stroke, "stroke-width":i, "stroke-linecap":"square"}))}), e.register("bar", {delimiter:",", fill:["#4D89F9"], height:16, min:0, padding:.1, width:32}, function(a){for (var b = this.values(), e = c.max.apply(c, a.max == d?b:b.concat(a.max)), f = c.min.apply(c, a.min == d?b:b.concat(a.min)), g = this.prepare(a.width, a.height), i = g.width(), j = g.height(), k = e - f, l = a.padding, m = this.fill(), n = this.x = function(a){return a * i / b.length}, o = this.y = function(a){return j - (k?(a - f) / k * j:1)}, p = 0; p < b.length; p++){var w, q = n(p + l), r = n(p + 1 - l) - q, s = b[p], t = o(s), u = t, v = t; k?s < 0?u = o(c.min(e, 0)):v = o(c.max(f, 0)):w = 1, w = v - u, 0 == w && (w = 1, e > 0 && k && u--), g.append(h("rect", {fill:m.call(this, s, p, b), x:q, y:u, width:r, height:w}))}})}(jQuery, document, Math);